# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

on:
  workflow_call:
    inputs:
      container:
        type: string
        required: false
        default: 'null'
      auto_link_r6:
        type: boolean
        default: true
      event_name:
        required: true
        type: string
      main_branches:
        required: true
        type: string
        default: 'main,master'
      run_id:
        required: true
        type: string
      cache_version:
        type: string
        default: '1'


jobs:

  cleanup:
    name: "üßº pkgdown: Clean up"
    if: inputs.event_name == 'release' || (needs.determine-pre-release.outputs.pre_release && contains(inputs.main_branches, github.ref))
    needs: determine-pre-release
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: üóë Delete previous deployments
        uses: strumwolf/delete-deployment-environment@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: github-pages
          onlyRemoveDeployments: true

  pkgdown-build:
    name: "üìñ pkgdown: Build"
    runs-on: ubuntu-latest
    container: ${{ fromJSON(inputs.container) }}
    defaults:
      run:
        shell: bash

    # Only restrict concurrency for non-PR jobs
    concurrency:
      group: pkgdown-${{ inputs.event_name != 'pull_request' || inputs.run_id }}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: r-lib/actions/setup-pandoc@v2

      - name: üîß Setup R
        if: ${{ inputs.container == 'null' }}
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: üîß Install R dependencies
        if: ${{ inputs.container == 'null' }}
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: ${{ inputs.cache_version }}
          extra-packages: |
            local::.
            any::pak
            any::jsonlite
            any::rcmdcheck
            any::devtools
            any::lintr
            any::covr
            any::roxygen2
            any::pkgdown
            any::rmarkdown
            any::styler
          needs: build, check, coverage, roxygen2, lint, website

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Fix malformed formatting
        run: |
          # It seems pkgdown does not properly format the reference/index.html file when S3 methods for classes
          # with spaces are used (such as "Microsoft SQL Server").

          # Modify the index.html file to fix the formatting
          # Using sed, we add missing parentheses to the function names
          sed -i 's/<code><a href="\(\w\+\)\.html">\(\w\+\)<\/a><\/code>/<code><a href="\1.html">\2()<\/a><\/code>/g' docs/reference/index.html


          # We also remove the surplus entry for the classes with spaces
          sed -i 's/<code><a href="\(\w\+\)\.html">\w\+\.[a-zA-Z_ ]\+<\/a><\/code>//g' docs/reference/index.html

      - name: Remove question marks from auto-linked references
        if: inputs.auto_link_r6
        run: |
          # The only way to auto-link R6 objects is by prepending af `?` to the code block
          # For specific functions in an R6 class, it is possible to prepend the parent class `?parent$function()`

          # Here we filter out these prepended blocks to generate a cleaner documentation.

          # Fixing "?R6class"
          # The links to the internal R6 classes have the following format when generated by pkgdown:
          # <a href="../reference/FeatureHandler.html">?FeatureHandler</a>
          # We remove the question mark to make the link cleaner
          # regex: <a href="\.\.\/([\/\w]+.html)">\?(\w+)<\/a>
          find docs -name *.html -exec sed -ri 's/(<a href=\"\.{2}[\w\/]+\.html">)\?(\w+<\/a>)/\1\2/g' {} +


          # Fixing "?R6class$function()"
          # pkgdown does not generate links for this type of reference, so we need to create the link fully manually
          # The code has the following format when generated by pkgdown
          # <code>?DiseasystoreBase$get_feature()</code>
          # We need to manually create the link to the function
          # regex: <code>\?(\w+)\$(\w+)\(\)<\/code>
          # Target: <a href="../reference/DiseasystoreBase.html#method-DiseasystoreBase-get_feature"><code>$get_feature()</code></a>
          find docs -name *.html -exec sed -ri 's/<code>\?(\w+)\$(\w+)\(\)<\/code>/<code><a href="\.{2}\/reference\/\1.html#method-\1-\2">\$\2\(\)<\/a><\/code>/g' {} +


          # Fixing "?R6class$active_binding"
          # pkgdown does not generate links for this type of reference, so we need to create the link fully manually
          # The code has the following format when generated by pkgdown
          # <code>?DiseasystoreBase$available_observables</code>
          # We need to manually create the link to the function
          # regex: <code>\?(\w+)\$(\w+)<\/code>
          # Target: <a href="../reference/DiseasystoreBase.html#active-bindings"><code>$available_observables</code></a>
          find docs -name *.html -exec sed -ri 's/<code>\?(\w+)\$(\w+)<\/code>/<code><a href="\.{2}\/reference\/\1.html#active-bindings">\$\2<\/a><\/code>/g' {} +


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: pkgdown
          path: docs/

  # Determine if the R-package version is before first release ( < 0.1 )
  determine-pre-release:
    name: "üîç pkgdown: Determine if pre-release"
    runs-on: ubuntu-latest
    needs: pkgdown-build
    outputs:
      pre_release: ${{ steps.determine-pre-release.outputs.pre_release }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Determine if pre-release
        id: determine-pre-release

        run: |
          set -o xtrace

          # Get the version from the DESCRIPTION file
          version=$(awk -F': ' '/^Version: / {print $2}' DESCRIPTION)

          # Split the version into its components
          IFS='.' read -ra version_parts <<< "$version"

          # Check if the version is less than 0.1
          if [[ ${version_parts[0]} -eq 0 && ${version_parts[1]} -lt 1 ]]; then
            echo "Pre-release detected"
            echo "pre_release=true" >> $GITHUB_OUTPUT
          else
            echo "No pre-release detected"
            echo "pre_release=false" >> $GITHUB_OUTPUT
          fi

          # Debug output
          echo "Version: $version"
          echo "Branch name: ${{ github.ref_name }}"
          echo "Main branches: ${{ inputs.main_branches }}"

  deploy:
    name: "üöÄ pkgdown: Deploy"
    runs-on: ubuntu-latest
    if: inputs.event_name == 'release' || (needs.determine-pre-release.outputs.pre_release && contains(inputs.main_branches, github.ref_name))
    needs: [cleanup, pkgdown-build, determine-pre-release]
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download pkgdown output
        uses: actions/download-artifact@v4
        with:
          name: pkgdown
          path: docs

      - name: Deploy to GitHub pages
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          clean: false
          branch: gh-pages
          folder: docs
